---
description: Guidelines for creating and maintaining Cursor rules to ensure consistency and effectiveness.
globs: .cursor/rules/*.mdc
alwaysApply: true
---
- **Required Rule Structure:**
  ```markdown
  ---
  description: Clear, one-line description of what the rule enforces
  globs: path/to/files/*.ext, other/path/**/*
  alwaysApply: boolean
  ---

  - **Main Points in Bold**
    - Sub-points with details
    - Examples and explanations
  ```

- **File References:**
  - Use `[filename](mdc:path/to/file)` ([filename](mdc:filename)) to reference files
  - Example: [prisma.mdc](mdc:.cursor/rules/prisma.mdc) for rule references
  - Example: [schema.prisma](mdc:prisma/schema.prisma) for code references

- **Code Examples:**
  - Use language-specific code blocks
  ```typescript
  // ✅ DO: Show good examples
  const goodExample = true;
  
  // ❌ DON'T: Show anti-patterns
  const badExample = false;
  ```

- **Rule Content Guidelines:**
  - Start with high-level overview
  - Include specific, actionable requirements
  - Show examples of correct implementation
  - Reference existing code when possible
  - Keep rules DRY by referencing other rules

- **Rule Maintenance:**
  - Update rules when new patterns emerge
  - Add examples from actual codebase
  - Remove outdated patterns
  - Cross-reference related rules

- **Best Practices:**
  - Use bullet points for clarity
  - Keep descriptions concise
  - Include both DO and DON'T examples
  - Reference actual code over theoretical examples
  - Use consistent formatting across rules

- **Use pnpm for all dependency management**
  - All install, add, remove, and update commands must use pnpm, not npm or yarn
  - Example:
    ```sh
    pnpm add @tanstack/react-query @tanstack/react-query-devtools
    pnpm remove some-package
    pnpm install
    ```
  - All documentation, scripts, and onboarding instructions must reference pnpm
  - Do not use npm or yarn for any package management tasks
  - If a script or CI step references npm or yarn, update it to use pnpm
  - Reference: [pnpm documentation](mdc:https:/pnpm.io)

- **Always use the queryKeys factory from [query-keys.ts](mdc:lib/query-keys.ts) for all React Query queryKey definitions**
  - Do not use inline arrays for query keys
  - Reference the query-keys.ts file for all cache key construction
  - Ensures type safety, cache consistency, and easier invalidation
  - Example:
    ```typescript
    // ✅ DO: Use the factory
    queryKey: queryKeys.matchups.byEventAndType(eventId, '3ball')
    queryKey: queryKeys.playerData.season({ dataSource })
    queryKey: queryKeys.playerData.live(eventId, roundFilter)
    ```
    ```typescript
    // ❌ DON'T: Use inline arrays
    queryKey: ['matchups', 'event', eventId, '3ball']
    queryKey: ['playerData', 'season', dataSource]
    ```
  - Update all hooks and components to follow this pattern
  - Reference: [lib/query-keys.ts](mdc:lib/query-keys.ts)

- **Use Supabase MCP tools for all DB work**
  - All schema changes, migrations, and queries must be performed using the Supabase MCP tools (see dev_workflow and taskmaster rules)
  - Do not use manual SQL, the Supabase dashboard, or other migration tools
  - Ensures auditability, repeatability, and team visibility
  - Example:
    - ✅ DO: Use MCP tool to create/drop tables, add columns, or run migrations
    - ❌ DON'T: Edit schema directly in the dashboard or run raw SQL outside MCP
  - Reference: [dev_workflow.mdc](mdc:.cursor/rules/dev_workflow.mdc), [taskmaster.mdc](mdc:.cursor/rules/taskmaster.mdc)

- **Task Master task/subtask workflow**
  - Always check the current Task Master task/subtask before starting any work
  - Mark the current subtask as 'in-progress' when you begin
  - When you believe a task/subtask is complete, provide a clear notification for user review and confirmation before marking as 'done'
  - Ensures traceability, review, and alignment with project priorities
  - Example:
    - ✅ DO: Check and update subtask status in MCP before/after coding
    - ❌ DON'T: Work on code without referencing or updating the task/subtask status
  - Reference: [dev_workflow.mdc](mdc:.cursor/rules/dev_workflow.mdc) 