# Task ID: 21
# Title: Task #21: Database Cleanup - Wipe Existing Parlay and Pick Test Data
# Status: done
# Dependencies: None
# Priority: high
# Description: Create and execute a database cleanup script to remove all existing parlay and pick test/seed data from the Supabase database, ensuring the tournament can start with a clean slate while maintaining referential integrity.
# Details:
This task involves creating a comprehensive database cleanup script to remove all test and seed data related to parlays and picks from the Supabase database. The implementation should:

1. Use Supabase Management Console and Programmatic (MCP) tools for all database operations
2. Identify all tables that contain parlay and pick data (likely including but not limited to: parlays, picks, parlay_entries, user_picks, etc.)
3. Create a backup of the current database state before performing any deletions
4. Implement the deletion in the correct order to maintain referential integrity:
   - First identify child tables with foreign key constraints
   - Delete records from child tables before parent tables
   - Use transactions to ensure atomicity of operations
5. Document all tables and relationships affected by the cleanup
6. Create a verification step that confirms all test data has been removed
7. Ensure that system metadata, user accounts, and configuration data remain intact
8. Add logging for all operations to track what was deleted
9. Consider implementing this as an idempotent script that can be run multiple times safely
10. Include a rollback mechanism in case of unexpected issues

The script should be designed to run in a staging environment first before being applied to production. Coordinate with the tournament administrators to schedule an appropriate maintenance window for this operation.

# Test Strategy:
Testing this database cleanup task requires a multi-phase approach:

1. Pre-execution verification:
   - Create a comprehensive inventory of all test/seed data currently in the system
   - Document record counts for all affected tables before cleanup
   - Verify backup procedures are working by restoring the backup to a test environment

2. Execution testing in staging environment:
   - Run the script in a staging environment that mirrors production
   - Verify that only test/seed data is removed and legitimate user data remains intact
   - Check that referential integrity is maintained by running database consistency checks
   - Verify that the application still functions correctly after data removal
   - Test the rollback mechanism by intentionally triggering a failure

3. Production execution verification:
   - Execute in production during the scheduled maintenance window
   - Compare before/after record counts to ensure expected data was removed
   - Run application test suite to verify system functionality
   - Manually test parlay and pick creation to ensure new entries can be created
   - Verify through the UI that no test data appears in any views or reports

4. Post-execution monitoring:
   - Monitor application logs for 24-48 hours after the cleanup
   - Check for any unexpected errors or performance issues
   - Verify with tournament administrators that the system is ready for live data

Document all test results and maintain the backup for at least one week after successful verification.

# Subtasks:
## 1. Database Schema Analysis and Backup Creation [done]
### Dependencies: None
### Description: Analyze the database schema to identify all tables containing parlay and pick data, document their relationships, and create a comprehensive backup before any deletion operations.
### Details:
Use Supabase Management Console to export the current database schema. Create an entity-relationship diagram identifying all tables related to parlays and picks (likely including parlays, picks, parlay_entries, user_picks tables). Document foreign key relationships to determine the correct deletion order. Create a full database backup using Supabase's backup functionality and store it in a secure location with appropriate naming that includes a timestamp.

## 2. Develop Deletion Script with Proper Sequencing [done]
### Dependencies: 21.1
### Description: Create a script that deletes parlay and pick data in the correct sequence to maintain referential integrity, with transaction support and logging.
### Details:
Using the schema analysis from subtask 1, write a SQL script that deletes data in reverse order of dependencies (child tables first, then parent tables). Implement the script using Supabase's SQL editor or programmatic API. Wrap all operations in transactions to ensure atomicity. Include detailed logging that records table names, deletion counts, and timestamps. Implement error handling that rolls back transactions if issues occur. The script should follow this general sequence: delete from user-specific pick tables first, then pick-related junction tables, then pick tables, then parlay-related tables.

## 3. Implement Verification and Rollback Mechanisms [done]
### Dependencies: 21.2
### Description: Enhance the deletion script with verification queries to confirm complete data removal and implement a rollback mechanism for recovery if needed.
### Details:
Add verification queries that run after deletion to confirm zero records remain in the targeted tables. Create a restoration script that can use the backup to restore data if needed. Make the deletion script idempotent by adding existence checks before deletion operations. Implement a logging system that records all actions taken, including counts of records deleted from each table. Create a summary report function that displays the results of the cleanup operation.

## 4. Execute Cleanup in Staging Environment [done]
### Dependencies: 21.3
### Description: Execute the finalized cleanup script in the staging environment and thoroughly validate the results before proceeding to production.
### Details:
Schedule a maintenance window for the staging environment. Execute the backup process first. Run the deletion script with full logging enabled. Execute all verification queries and document the results. Test that core application functionality still works after data removal. Verify that only parlay and pick data was removed while system metadata, user accounts, and configuration data remain intact. Document any issues encountered and their resolutions.

## 5. Production Deployment and Post-Cleanup Verification [done]
### Dependencies: 21.4
### Description: Execute the cleanup script in the production environment during a scheduled maintenance window and perform comprehensive verification.
### Details:
Coordinate with tournament administrators to schedule an appropriate maintenance window. Notify all stakeholders of the planned maintenance. Create a pre-execution production backup. Execute the cleanup script in production with full logging. Run all verification queries and document the results. Perform application-level testing to ensure the system is functioning correctly. Prepare a detailed report of the cleanup operation including tables affected, record counts removed, and verification results. Archive all logs and the pre-cleanup backup according to data retention policies.

